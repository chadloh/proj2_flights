axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
AK <- p %+% subset(all_states, id == "Alaska") + theme(legend.position = "none")
HI <- p %+% subset(all_states, id == "Hawaii") + theme(legend.position = "none")
contiguous <- p %+% subset(all_states, id != "Alaska" & id != "Hawaii")
grid.newpage()
vp <- viewport(width = 1, height = 1, x = 0.75)
print(contiguous, vp = vp)
subvp1 <- viewport(width = 0.35, height = 0.35, x = 0.15, y = 0.63)
print(AK, vp = subvp1)
subvp2 <- viewport(width = 0.15, height = 0.15, x = 0.15, y = 0.30)
print(HI, vp = subvp2)
p + geom_path(data = path, aes(long = X1, lat = X2))
p + geom_path(data = path, aes(lon, lat))
library(maptools)
library(rgeos)
library(mapproj)
library(grid)
all_states <- fortify(s, region = "STATE_NAME")
p <- ggplot() + geom_polygon(
aes(x=long, y=lat, group = group, fill = as.numeric(as.factor(id))),
colour="white", size = 0.25
) + coord_map(projection="mercator") +
scale_fill_gradient(limits = c(1,50))
p <-   p + theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
AK <- p %+% subset(all_states, id == "Alaska") + theme(legend.position = "none")
HI <- p %+% subset(all_states, id == "Hawaii") + theme(legend.position = "none")
contiguous <- p %+% subset(all_states, id != "Alaska" & id != "Hawaii")
grid.newpage()
vp <- viewport(width = 1, height = 1, x = 0.75)
print(contiguous, vp = vp)
subvp1 <- viewport(width = 0.35, height = 0.35, x = 0.15, y = 0.63)
print(AK, vp = subvp1)
subvp2 <- viewport(width = 0.15, height = 0.15, x = 0.15, y = 0.30)
print(HI, vp = subvp2)
p <- ggplot() + geom_path(data = path, aes(lon, lat))
p <- ggplot() + geom_path(data = path, aes(lon, lat))
library(maptools)
library(rgeos)
library(mapproj)
library(grid)
all_states <- fortify(s, region = "STATE_NAME")
p <- ggplot() + geom_polygon(
aes(x=long, y=lat, group = group, fill = as.numeric(as.factor(id))),
colour="white", size = 0.25
) + coord_map(projection="mercator") +
scale_fill_gradient(limits = c(1,50))
p <-   p + theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
AK <- p %+% subset(all_states, id == "Alaska") + theme(legend.position = "none")
HI <- p %+% subset(all_states, id == "Hawaii") + theme(legend.position = "none")
contiguous <- p %+% subset(all_states, id != "Alaska" & id != "Hawaii")
grid.newpage()
vp <- viewport(width = 1, height = 1, x = 0.75)
print(contiguous, vp = vp)
subvp1 <- viewport(width = 0.35, height = 0.35, x = 0.15, y = 0.63)
print(AK, vp = subvp1)
subvp2 <- viewport(width = 0.15, height = 0.15, x = 0.15, y = 0.30)
print(HI, vp = subvp2)
p <- ggplot() + geom_path(data = path, aes(X1, X2))
p <- ggplot() + geom_path(data = path, aes(X1, X2))
p <- ggplot() + wrld + geom_path(data = path, aes(X1, X2))
wrld <- borders("world", colour="gray50", fill="gray50")
p <- ggplot() + wrld + geom_path(data = path, aes(X1, X2))
p <- ggplot() + wrld
ggplot() + wrld + geom_path(data = path, aes(X1, X2))
wrld <- borders("world", colour="gray50", fill="gray50")
ggplot() + wrld + geom_path(data = path, aes(X1, X2))
ggplot() + wrld + geom_path(data = path, aes(lon, lat))
p + geom_path(data = path, aes(lon, lat))
p + geom_path(data = path, aes(lon, lat))
library(maptools)
library(rgeos)
library(mapproj)
library(grid)
all_states <- fortify(s, region = "STATE_NAME")
p <- ggplot() + geom_polygon(
aes(x=long, y=lat, group = group, fill = as.numeric(as.factor(id))),
colour="white", size = 0.25
) + coord_map(projection="mercator") +
scale_fill_gradient(limits = c(1,50))
p <-   p + theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
AK <- p %+% subset(all_states, id == "Alaska") + theme(legend.position = "none")
HI <- p %+% subset(all_states, id == "Hawaii") + theme(legend.position = "none")
contiguous <- p %+% subset(all_states, id != "Alaska" & id != "Hawaii")
p + geom_path(data = path, aes(lon, lat))
library(maptools)
library(rgeos)
library(mapproj)
library(grid)
all_states <- fortify(s, region = "STATE_NAME")
p <- ggplot() + geom_polygon(
aes(x=long, y=lat, group = group, fill = as.numeric(as.factor(id))),
colour="white", size = 0.25
) + coord_map(projection="mercator") +
scale_fill_gradient(limits = c(1,50))
p <-   p + theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
AK <- p %+% subset(all_states, id == "Alaska") + theme(legend.position = "none")
HI <- p %+% subset(all_states, id == "Hawaii") + theme(legend.position = "none")
contiguous <- p %+% subset(all_states, id != "Alaska" & id != "Hawaii")
p <- p + geom_path(data = path, aes(lon = long, lat))
grid.newpage()
vp <- viewport(width = 1, height = 1, x = 0.75)
print(contiguous, vp = vp)
subvp1 <- viewport(width = 0.35, height = 0.35, x = 0.15, y = 0.63)
print(AK, vp = subvp1)
subvp2 <- viewport(width = 0.15, height = 0.15, x = 0.15, y = 0.30)
print(HI, vp = subvp2)
library(maptools)
library(rgeos)
library(mapproj)
library(grid)
all_states <- fortify(s, region = "STATE_NAME")
p <- ggplot() + geom_polygon(
aes(x=long, y=lat, group = group, fill = as.numeric(as.factor(id))),
colour="white", size = 0.25
) + coord_map(projection="mercator") +
scale_fill_gradient(limits = c(1,50))
p <-   p + theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
AK <- p %+% subset(all_states, id == "Alaska") + theme(legend.position = "none")
HI <- p %+% subset(all_states, id == "Hawaii") + theme(legend.position = "none")
contiguous <- p %+% subset(all_states, id != "Alaska" & id != "Hawaii")
p <- p + geom_path(data = path, aes(long = lon, lat))
grid.newpage()
vp <- viewport(width = 1, height = 1, x = 0.75)
print(contiguous, vp = vp)
subvp1 <- viewport(width = 0.35, height = 0.35, x = 0.15, y = 0.63)
print(AK, vp = subvp1)
subvp2 <- viewport(width = 0.15, height = 0.15, x = 0.15, y = 0.30)
print(HI, vp = subvp2)
p <- ggplot() + geom_polygon(
aes(x=long, y=lat, group = group)),
p <- ggplot() +
geom_polygon(aes(x=long, y=lat, group = group), col="white", size = 0.25) +
coord_map(projection="mercator") +
scale_fill_gradient(limits = c(1,50))
library(maptools)
library(rgeos)
library(mapproj)
library(grid)
all_states <- fortify(s, region = "STATE_NAME")
p <- ggplot() +
geom_polygon(aes(x=long, y=lat, group = group), col="white", size = 0.25) +
coord_map(projection="mercator")
p <-   p + theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
AK <- p %+% subset(all_states, id == "Alaska") + theme(legend.position = "none")
HI <- p %+% subset(all_states, id == "Hawaii") + theme(legend.position = "none")
contiguous <- p %+% subset(all_states, id != "Alaska" & id != "Hawaii")
p <- p + geom_path(data = path, aes(lon, lat))
grid.newpage()
vp <- viewport(width = 1, height = 1, x = 0.75)
print(contiguous, vp = vp)
subvp1 <- viewport(width = 0.35, height = 0.35, x = 0.15, y = 0.63)
print(AK, vp = subvp1)
subvp2 <- viewport(width = 0.15, height = 0.15, x = 0.15, y = 0.30)
print(HI, vp = subvp2)
rid.newpage()
grid.newpage()
vp <- viewport(width = 1.5, height = 1, x = 0.75)
print(contiguous, vp = vp)
subvp1 <- viewport(width = 0.35, height = 0.35, x = 0.15, y = 0.63)
print(AK, vp = subvp1)
subvp2 <- viewport(width = 0.15, height = 0.15, x = 0.15, y = 0.30)
print(HI, vp = subvp2)
p <- p + geom_path(data = path, aes(lon, lat))
grid.newpage()
vp <- viewport(width = 1.5, height = 1, x = 0.75)
print(contiguous, vp = vp)
subvp1 <- viewport(width = 0.35, height = 0.35, x = 0.15, y = 0.63)
print(AK, vp = subvp1)
subvp2 <- viewport(width = 0.15, height = 0.15, x = 0.15, y = 0.30)
print(HI, vp = subvp2)
vp <- vp + geom_path(data = path, aes(lon, lat))
grid.newpage()
vp <- viewport(width = 1.5, height = 1, x = 0.75)
print(contiguous, vp = vp)
subvp1 <- viewport(width = 0.35, height = 0.35, x = 0.15, y = 0.63)
subvp2 <- viewport(width = 0.15, height = 0.15, x = 0.15, y = 0.30)
subvp2 <- viewport(width = 0.15, height = 0.15, x = 0.15, y = 0.30)
print(HI, vp = subvp2)
vp <- vp + geom_path(data = path, aes(lon, lat))
grid.newpage()
vp <- viewport(width = 1.5, height = 1, x = 0.75)
print(contiguous, vp = vp)
subvp1 <- viewport(width = 0.35, height = 0.35, x = 0.15, y = 0.63)
print(AK, vp = subvp1)
subvp2 <- viewport(width = 0.15, height = 0.15, x = 0.15, y = 0.30)
print(HI, vp = subvp2)
path %>%
rename(long = lon)
library(maptools)
library(rgeos)
library(mapproj)
library(grid)
all_states <- fortify(s, region = "STATE_NAME")
p <- ggplot() +
geom_polygon(aes(x=long, y=lat, group = group), col="white", size = 0.25) +
coord_map(projection="mercator")
p <-   p + theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
AK <- p %+% subset(all_states, id == "Alaska") + theme(legend.position = "none")
HI <- p %+% subset(all_states, id == "Hawaii") + theme(legend.position = "none")
contiguous <- p %+% subset(all_states, id != "Alaska" & id != "Hawaii")
p <- p + geom_path(data = path, aes(long, lat))
grid.newpage()
vp <- viewport(width = 1.5, height = 1, x = 0.75)
print(contiguous, vp = vp)
subvp1 <- viewport(width = 0.35, height = 0.35, x = 0.15, y = 0.63)
print(AK, vp = subvp1)
subvp2 <- viewport(width = 0.15, height = 0.15, x = 0.15, y = 0.30)
print(HI, vp = subvp2)
path %>%
rename(long = lon)
library(maptools)
library(rgeos)
library(mapproj)
library(grid)
all_states <- fortify(s, region = "STATE_NAME")
p <- ggplot() + geom_polygon(
aes(x=long, y=lat, group = group, fill = as.numeric(as.factor(id))),
colour="white", size = 0.25
) + coord_map(projection="mercator") +
scale_fill_gradient(limits = c(1,50))
p <-   p + theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
AK <- p %+% subset(all_states, id == "Alaska") + theme(legend.position = "none")
HI <- p %+% subset(all_states, id == "Hawaii") + theme(legend.position = "none")
contiguous <- p %+% subset(all_states, id != "Alaska" & id != "Hawaii")
p <- p + geom_path(data = path, aes(lon, lat))
grid.newpage()
vp <- viewport(width = 1, height = 1, x = 0.75)
print(contiguous, vp = vp)
subvp1 <- viewport(width = 0.35, height = 0.35, x = 0.15, y = 0.63)
print(AK, vp = subvp1)
subvp2 <- viewport(width = 0.15, height = 0.15, x = 0.15, y = 0.30)
print(HI, vp = subvp2)
library(maptools)
library(rgeos)
library(mapproj)
library(grid)
all_states <- fortify(s, region = "STATE_NAME")
p <- ggplot() + geom_polygon(
aes(x=long, y=lat, group = group, fill = as.numeric(as.factor(id))),
colour="white", size = 0.25
) + coord_map(projection="mercator") +
scale_fill_gradient(limits = c(1,50))
p <-   p + theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
AK <- p %+% subset(all_states, id == "Alaska") + theme(legend.position = "none")
HI <- p %+% subset(all_states, id == "Hawaii") + theme(legend.position = "none")
contiguous <- p %+% subset(all_states, id != "Alaska" & id != "Hawaii")
grid.newpage()
vp <- viewport(width = 1, height = 1, x = 0.75)
print(contiguous, vp = vp)
subvp1 <- viewport(width = 0.35, height = 0.35, x = 0.15, y = 0.63)
print(AK, vp = subvp1)
subvp2 <- viewport(width = 0.15, height = 0.15, x = 0.15, y = 0.30)
print(HI, vp = subvp2)
p <- p + geom_path(data = path, aes(lon, lat))
p <- p + geom_path(data = path, aes(lon, lat))
base_world <- map_data("world")
p <- ggplot() +
geom_polygon(data=base_world, aes(x=long, y=lat, group=group)) + geom_path(data = path, aes(lon, lat))
ggplot() +
geom_polygon(data=base_world, aes(x=long, y=lat, group=group)) + geom_path(data = path, aes(lon, lat))
port1_sp <- SpatialPoints(coords = cbind(flights_pair$port1_lon, flights_pair$port1_lat),
proj4string = CRS("+init=epsg:4326"))
port2_sp <- SpatialPoints(coords = cbind(flights_pair$port2_lon, flights_pair$port2_lat),
proj4string = CRS("+init=epsg:4326"))
path <- NULL
for(i in 1:50){ # for testing
# for(i in 1:nrow(coordinates(os))){
path1 <- gcIntermediate(port1_sp[i,], port2_sp[i,], addStartEnd=TRUE, breakAtDateLine = F)
path1 <- data.frame(path1)
path <- rbind(path, path1)
}
path %>%
rename(long = lon)
base_world <- map_data("us")
base_world <- map_data("USA")
base_world <- map_data("state")
ggplot() +
geom_polygon(data=base_world, aes(x=long, y=lat, group=group)) + geom_path(data = path, aes(lon, lat))
library(fiftystater)
install.packages("fiftystater")
install.packages("sf")
library(fiftystater)
install.packages("fiftystater")
devtools::install_github("wmurphyrd/fiftystater")
p <- ggplot() +
geom_polygon(data = US, aes(x=X, y = Y, group = group), fill="grey", alpha=0.3) +
geom_point(data = df, alpha = 0.5, aes(x=df$lon, y=df$lat, size=df$manual_prm, color=df$wcng_score)) +
scale_size_continuous(name="Premium", trans="log",  range=c(0.1,4)) +
scale_alpha_continuous(range=c(0.1, 0.9)) +
scale_color_viridis(name = "Scores", trans="log", option="magma") +
theme_void() +
coord_sf(crs = epsg, datum = NA) +
ggtitle("Scores") +
theme(
legend.position = c(0.85, 0.8),
text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 16, hjust=0.1, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm"))
)
library(fiftystater)
library(sf)
epsg <- 102003
US <- st_as_sf(fifty_states, coords =c("long", "lat"), crs = 4326) %>%
st_transform(epsg) %>%
cbind(st_coordinates(.))
US <- st_as_sf(fifty_states, coords =c("long", "lat"), crs = 4326) %>%
st_transform(epsg) %>%
cbind(st_coordinates(.))
library(fiftystater)
library(sf)
epsg <- 102003
US <- st_as_sf(fifty_states, coords =c("long", "lat")) %>%
st_transform(epsg) %>%
cbind(st_coordinates(.))
library(fiftystater)
library(sf)
epsg <- 102003
US <- st_as_sf(fifty_states, coords =c("long", "lat"), crs = 4326) %>%
st_transform(epsg) %>%
cbind(st_coordinates(.))
library(fiftystater)
library(sf)
epsg <- 102003
US <- st_as_sf(fifty_states, coords =c("long", "lat"), crs = 4326) %>%
st_transform(epsg) %>%
cbind(st_coordinates(.))
library(fiftystater)
library(sf)
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(crimes, aes(map_id = state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = Assault), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
theme(legend.position = "bottom",
panel.background = element_blank())
p
p
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(crimes, aes(map_id = state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = Assault), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
theme(legend.position = "bottom",
panel.background = element_blank()) +
geom_polygon(data=base_world, aes(x=long, y=lat, group=group)) + geom_path(data = path, aes(lon, lat))
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
library(fiftystater)
library(sf)
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(crimes, aes(map_id = state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = Assault), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
theme(legend.position = "bottom",
panel.background = element_blank())
p
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(crimes, aes(map_id = state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = Assault), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
theme(legend.position = "bottom",
panel.background = element_blank()) + geom_path(data = path, aes(lon, lat))
p
library(fiftystater)
library(sf)
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(crimes, aes(map_id = state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = Assault), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
geom_path(data = path, aes(lon, lat)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
theme(legend.position = "bottom",
panel.background = element_blank())
p
library(fiftystater)
library(sf)
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(crimes, aes(map_id = state)) +
# map points to the fifty_states shape data
geom_map(aes(fill = Assault), map = fifty_states) +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
# geom_path(data = path, aes(lon, lat)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
theme(legend.position = "bottom",
panel.background = element_blank())
p
gc()
